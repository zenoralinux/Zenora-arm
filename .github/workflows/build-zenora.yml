name: Build ARM64 rootfs for Termux

on:
  workflow_dispatch:
  schedule:
    - cron: '24 7 1 * *'

jobs:
  build-rootfs:
    runs-on: ubuntu-latest
    name: "Build ARM64 rootfs"
    container: 
      image: archlinux/archlinux
      options: --privileged

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare container environment
        run: |
          pacman-key --init
          pacman-key --populate archlinuxarm
          # Correct ArchLinuxARM repositories
          echo -e "\n[archlinuxarm]\nSigLevel = Optional TrustAll\nServer = http://mirror.archlinuxarm.org/\$arch/\$repo" >> /etc/pacman.conf
          echo -e "\n[alarm]\nSigLevel = Optional TrustAll\nServer = http://mirror.archlinuxarm.org/\$arch/\$repo" >> /etc/pacman.conf
          
          # Install required packages
          pacman -Sy --noconfirm archlinuxarm-keyring
          pacman -Syu --noconfirm
          pacman -S --noconfirm arch-install-scripts wget curl base-devel zip unzip zsh shadow qemu qemu-user-static binfmt-support

      - name: Set image version and prepare rootfs
        run: |
          echo "IMAGE_VERSION=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV
          mkdir /mnt/sys-root-skeleton /mnt/sys-root
          mount --bind /mnt/sys-root-skeleton /mnt/sys-root
          # Use ArchLinuxARM's pacman.conf
          wget -O target-pacman.conf https://raw.githubusercontent.com/archlinuxarm/PKGBUILDs/master/pacman.conf
          # Add ARM64 architecture
          sed -i 's/^#Architecture = auto/Architecture = aarch64/' target-pacman.conf

      - name: Initialize rootfs base system for ARM64
        run: |
          # Register ARM binaries to run via qemu
          update-binfmts --enable qemu-aarch64
          # Create base system for aarch64 using ArchLinuxARM packages
          pacstrap -C target-pacman.conf -K /mnt/sys-root --arch aarch64 \
            base base-devel archlinuxarm-keyring \
            curl wget vim nano sudo \
            texinfo man-db man-pages zsh shadow

      - name: Configure rootfs
        run: |
          # Configure ARM64 specific settings
          echo "Architecture = aarch64" >> /mnt/sys-root/etc/pacman.conf
          # Use ArchLinuxARM mirrors
          echo "Server = http://mirror.archlinuxarm.org/\$arch/\$repo" > /mnt/sys-root/etc/pacman.d/mirrorlist
          
          # Basic configurations
          echo "%wheel ALL=(ALL:ALL) ALL" > /mnt/sys-root/etc/sudoers.d/wheel
          echo "tmpfs /tmp tmpfs mode=1777,strictatime,nosuid,nodev,size=50%,nr_inodes=1m 0 0" >> /mnt/sys-root/etc/fstab
          echo "LANG=en_US.UTF-8" > /mnt/sys-root/etc/locale.conf
          echo "en_US.UTF-8 UTF-8" >> /mnt/sys-root/etc/locale.gen
          
          # Initialize keyring in the target
          cp -r /etc/pacman.d/gnupg /mnt/sys-root/etc/pacman.d/
          chroot /mnt/sys-root pacman-key --init
          chroot /mnt/sys-root pacman-key --populate archlinuxarm
          
          # Cleanup
          rm -f /mnt/sys-root/etc/machine-id
          touch /mnt/sys-root/etc/machine-id
          rm -rf /mnt/sys-root/var/cache/pacman/pkg/*

      - name: Create default user and configure zsh
        run: |
          chroot /mnt/sys-root useradd -m -G wheel -s /bin/zsh zenora
          echo 'zenora:zenora' | chroot /mnt/sys-root chpasswd
          echo "/bin/zsh" >> /mnt/sys-root/etc/shells
          echo "SHELL=/bin/zsh" >> /mnt/sys-root/etc/environment

      - name: Install additional packages
        run: |
          chroot /mnt/sys-root pacman -Sy --noconfirm
          chroot /mnt/sys-root pacman -S --noconfirm \
            neofetch \
            git \
            openssh

      - name: Cleanup and package rootfs
        run: |
          tar --numeric-owner -czf zenora-arm64-rootfs.tar.gz -C /mnt/sys-root ./

      - name: Generate sha256sums
        run: |
          sha256sum zenora-arm64-rootfs.tar.gz > sha256sums

      - name: Upload artifact
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: "arm64-${{ env.IMAGE_VERSION }}"
          files: |
            zenora-arm64-rootfs.tar.gz
            sha256sums
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
