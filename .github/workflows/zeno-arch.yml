name: zenora ARM64 AUR Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'

permissions:
  contents: write

jobs:
  build-arm64:
    runs-on: ubuntu-latest

    steps:
      - name: Enable QEMU for aarch64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Zenora RootFS from proot-distro base
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/fwcd/archlinux:latest
          options: --platform linux/arm64 --privileged -v ${{ github.workspace }}:/output
          shell: bash
          run: |
            set -eux

            # دریافت rootfs رسمی Arch برای proot-distro
            mkdir -p /rootfs-base
            cd /rootfs-base
            curl -LO http://archlinuxarm.org/os/ArchLinuxARM-aarch64-latest.tar.gz
            tar -xJf ArchLinuxARM-aarch64-latest.tar.gz --strip-components=1

            ROOTFS_DIR=/rootfs-base

            # اضافه کردن مخازن zenora
            echo -e "[zrepo]\nSigLevel = Never\nServer = https://codeberg.org/zenoralinux/zenora-repo/raw/branch/main/\$arch" >> "$ROOTFS_DIR/etc/pacman.conf"
            echo -e "[zc-repo]\nSigLevel = Never\nServer = https://codeberg.org/zenoralinux/zc-repo/raw/branch/main/zcrepo/\$arch" >> "$ROOTFS_DIR/etc/pacman.conf"

            # آپدیت و نصب بسته‌ها در داخل rootfs با chroot
            mount --bind /dev "$ROOTFS_DIR/dev"
            mount --bind /proc "$ROOTFS_DIR/proc"
            mount --bind /sys "$ROOTFS_DIR/sys"

            chroot "$ROOTFS_DIR" pacman -Syu --noconfirm
            chroot "$ROOTFS_DIR" pacman -S --noconfirm \
              base curl wget nano texinfo man-db man-pages zsh shadow bash \
              coreutils file sed tar zstd pacman sudo \
              zenora-release zrepo/neofetch \
              zenora-zsh-config zenora-fake-apt zenora-back

            umount "$ROOTFS_DIR/dev" || true
            umount "$ROOTFS_DIR/proc" || true
            umount "$ROOTFS_DIR/sys" || true

            # تنظیم locale
            echo "en_US.UTF-8 UTF-8" >> "$ROOTFS_DIR/etc/locale.gen"
            chroot "$ROOTFS_DIR" locale-gen
            echo 'LANG=en_US.UTF-8' > "$ROOTFS_DIR/etc/locale.conf"

            # DNS و hostname
            echo "nameserver 8.8.8.8" > "$ROOTFS_DIR/etc/resolv.conf"
            echo "localhost" > "$ROOTFS_DIR/etc/hostname"
            echo "127.0.0.1 localhost" > "$ROOTFS_DIR/etc/hosts"

            # جلوگیری از ارور landlock
            echo "PACMAN_IGNORE_LANDLOCK=1" >> "$ROOTFS_DIR/etc/environment"
            echo "export PACMAN_IGNORE_LANDLOCK=1" >> "$ROOTFS_DIR/etc/profile"

            # مسیرهای proot
            mkdir -p "$ROOTFS_DIR"/{proc,sys,dev,run,tmp}
            chmod 1777 "$ROOTFS_DIR/tmp"
            ln -sf /proc/mounts "$ROOTFS_DIR/etc/mtab" || true

            # اطمینان از وجود ld-linux
            if [ ! -f "$ROOTFS_DIR/lib/ld-linux-aarch64.so.1" ]; then
              cp /usr/lib/ld-linux-aarch64.so.1 "$ROOTFS_DIR/lib/"
            fi

            # symlink برای /bin/sh
            ln -sf /bin/bash "$ROOTFS_DIR/bin/sh"

            # ساخت کاربر zenora با zsh و sudo بدون پسورد
            echo "zenora:x:1000:1000::/home/zenora:/bin/zsh" >> "$ROOTFS_DIR/etc/passwd"
            echo "zenora:x:1000:" >> "$ROOTFS_DIR/etc/group"
            echo "zenora ALL=(ALL) NOPASSWD: ALL" >> "$ROOTFS_DIR/etc/sudoers"
            mkdir -p "$ROOTFS_DIR/home/zenora"
            touch "$ROOTFS_DIR/home/zenora/.zshrc"
            chown -R 1000:1000 "$ROOTFS_DIR/home/zenora"

            # حذف کش
            rm -rf "$ROOTFS_DIR/var/cache/pacman/pkg"/* || true

            # ساخت فایل tar.gz نهایی
            tar --hard-dereference --numeric-owner --preserve-permissions -czf /output/zenroalinux-arm64-rootfs.tar.gz -C "$ROOTFS_DIR" .

            ls -lh /output/zenroalinux-arm64-rootfs.tar.gz

      - name: Set release tag
        id: tag
        run: echo "tag_name=arm64-rootfs-$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release in `zenora-android`
        uses: softprops/action-gh-release@v2
        with:
          repository: zenoralinux/zenora-android
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: Zenora ARM64 RootFS ${{ steps.tag.outputs.tag_name }}
          files: ${{ github.workspace }}/zenroalinux-arm64-rootfs.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.ZENORA_ANDROID_PAT }}
