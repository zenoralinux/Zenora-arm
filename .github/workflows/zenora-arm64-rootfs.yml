name: zenora ARM64 AUR Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'  # اجرای روزانه ساعت 03:00 UTC

permissions:
  contents: write  # مجوز لازم برای ایجاد Release

jobs:
  build-arm64:
    runs-on: ubuntu-latest

    steps:
      - name: Enable QEMU for aarch64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ARM64 RootFS in container
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/fwcd/archlinux:latest
          options: --platform linux/arm64 --privileged -v ${{ github.workspace }}:/output
          shell: bash
          run: |
            set -eux

            pacman -Syu --noconfirm --needed arch-install-scripts pacman-contrib wget curl base-devel sudo

            ROOTFS_DIR=~/zenora-rootfs
            mkdir -p "$ROOTFS_DIR"
            
            sed -i '/^\[core\]/i\
            [zrepo]\
            SigLevel = Never\
            Server = https://codeberg.org/zenoralinux/zenora-repo/raw/branch/main/$arch' /etc/pacman.conf
            
            sed -i '/^\[core\]/i\
            [zc-repo]\
            SigLevel = Never\
            Server = https://codeberg.org/zenoralinux/zc-repo/raw/branch/main/zcrepo/$arch' /etc/pacman.conf

            sudo pacstrap -G -M -C /etc/pacman.conf "$ROOTFS_DIR" \
              base curl wget nano sudo texinfo man-db man-pages zsh shadow \
              bash coreutils file sed tar zstd pacman zenora-release zrepo/neofetch zenora-zsh-config  \
              zenora-fake-apt zenora-back 

            sudo sed -i 's/^#en_US.UTF-8/en_US.UTF-8/' "$ROOTFS_DIR"/etc/locale.gen
            arch-chroot "$ROOTFS_DIR" locale-gen
            
            arch-chroot "$ROOTFS_DIR" useradd -m -G wheel -s /bin/zsh zenora
            echo 'zenora:zenora' | arch-chroot "$ROOTFS_DIR" chpasswd
            echo '%wheel ALL=(ALL:ALL) NOPASSWD: ALL' >> "$ROOTFS_DIR/etc/sudoers"

            sed -i 's|^SHELL=.*|SHELL=/bin/zsh|' "$ROOTFS_DIR"/etc/default/useradd
            touch "$ROOTFS_DIR"/etc/skel/.zshrc

            echo "nameserver 1.1.1.1" > "$ROOTFS_DIR"/etc/resolv.conf
            cp /etc/pacman.conf "$ROOTFS_DIR"/etc/pacman.conf
            sudo rm -rf "$ROOTFS_DIR"/var/cache/pacman/pkg/*
            echo "PACMAN_IGNORE_LANDLOCK=1" >> "$ROOTFS_DIR"/etc/environment

            find "$ROOTFS_DIR" -type d -exec chmod 755 {} \; &
            find "$ROOTFS_DIR" -type f -exec chmod 644 {} \; & 
            chmod -R 755 "$ROOTFS_DIR"/usr/{bin,lib,libexec,sbin} & 
            chmod -R 755 "$ROOTFS_DIR"/bin "$ROOTFS_DIR"/sbin &

            tar -czvf /output/zenroalinux-arm64-rootfs.tar.gz -C "$ROOTFS_DIR" .
            ls -lh /output/zenroalinux-arm64-rootfs.tar.gz

      - name: Set release tag
        id: tag
        run: echo "tag_name=arm64-rootfs-$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: Zenora ARM64 RootFS ${{ steps.tag.outputs.tag_name }}
          files: ${{ github.workspace }}/zenroalinux-arm64-rootfs.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
