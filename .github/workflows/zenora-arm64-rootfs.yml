steps:
  - name: Enable QEMU for aarch64
    uses: docker/setup-qemu-action@v3
    with:
      platforms: all

  - name: Checkout repository
    uses: actions/checkout@v4

  - name: Build ARM64 RootFS in container
    uses: addnab/docker-run-action@v3
    with:
      image: ghcr.io/fwcd/archlinux:latest
      options: >-
        --platform linux/arm64
        --privileged
        -v ${{ github.workspace }}:/output
      shell: bash
      run: |
        set -eux

        # 1. نصب ابزارهای ضروری
        pacman -Syu --noconfirm --needed \
          arch-install-scripts pacman-contrib wget curl base-devel \
          nano texinfo man-db man-pages zsh shadow bash \
          coreutils file sed tar zstd pacman sudo

        ROOTFS_DIR=~/zenora-rootfs
        mkdir -p "$ROOTFS_DIR"

        # 2. افزودن مخازن اختصاصی zenora و zc-repo
        sed -i '/^\[core\]/i\
        [zrepo]\
        SigLevel = Never\
        Server = https://codeberg.org/zenoralinux/zenora-repo/raw/branch/main/$arch'
          /etc/pacman.conf
        sed -i '/^\[core\]/i\
        [zc-repo]\
        SigLevel = Never\
        Server = https://codeberg.org/zenoralinux/zc-repo/raw/branch/main/zcrepo/$arch'
          /etc/pacman.conf

        # 3. ساخت rootfs بدون systemd
        pacstrap -G -M -C /etc/pacman.conf "$ROOTFS_DIR" \
          base curl wget nano texinfo man-db man-pages zsh shadow \
          bash coreutils file sed tar zstd pacman zenora-release \
          zrepo/neofetch zenora-zsh-config zenora-fake-apt zenora-back sudo

        # 4. فعال‌سازی locale و timezone
        echo "# Enable locale" \
          && sed -i 's/^#en_US.UTF-8/en_US.UTF-8/' "$ROOTFS_DIR"/etc/locale.gen \
          && arch-chroot "$ROOTFS_DIR" locale-gen \
          && echo 'LANG=en_US.UTF-8' > "$ROOTFS_DIR"/etc/locale.conf
        echo 'UTC' > "$ROOTFS_DIR"/etc/timezone

        # 5. پیکربندی /etc/hosts و hostname
        echo '127.0.0.1 localhost' > "$ROOTFS_DIR"/etc/hosts
        echo 'localhost' > "$ROOTFS_DIR"/etc/hostname

        # 6. ساخت پوشه‌های مورد نیاز proot
        mkdir -p "$ROOTFS_DIR"/{proc,sys,dev,run,tmp}
        chmod 1777 "$ROOTFS_DIR"/tmp

        # 7. ایجاد فایل‌های device ضروری
        mknod -m 666 "$ROOTFS_DIR"/dev/null c 1 3
        mknod -m 666 "$ROOTFS_DIR"/dev/urandom c 1 9

        # 8. تنظیم DNS
        echo 'nameserver 8.8.8.8' > "$ROOTFS_DIR"/etc/resolv.conf

        # 9. جلوگیری از خطاهای landlock برای pacman
        echo 'PACMAN_IGNORE_LANDLOCK=1' >> "$ROOTFS_DIR"/etc/environment
        echo 'export PACMAN_IGNORE_LANDLOCK=1' >> "$ROOTFS_DIR"/etc/profile

        # 10. تنظیم sh به bash
        ln -sf /bin/bash "$ROOTFS_DIR"/bin/sh

        # 11. پیکربندی sudo و کاربر zenora
        # ایجاد کاربر و گروه
        echo "zenora:x:1000:1000::/home/zenora:/bin/zsh" >> "$ROOTFS_DIR"/etc/passwd
        echo "zenora:x:1000:wheel" >> "$ROOTFS_DIR"/etc/group
        mkdir -p "$ROOTFS_DIR"/home/zenora
        cp "$ROOTFS_DIR"/etc/skel/.zshrc "$ROOTFS_DIR"/home/zenora/.zshrc
        chown -R 1000:1000 "$ROOTFS_DIR"/home/zenora

        # فعال‌سازی sudo برای zenora بدون پسورد
        echo 'zenora ALL=(ALL) NOPASSWD: ALL' >> "$ROOTFS_DIR"/etc/sudoers

        # شبیه‌سازی sudo در proot
        echo -e '#!/bin/sh\nexec "\$@"' > "$ROOTFS_DIR"/usr/bin/sudo
        chmod +x "$ROOTFS_DIR"/usr/bin/sudo

        # 12. اطمینان از وجود ld-linux
        if [ ! -f "$ROOTFS_DIR"/lib/ld-linux-aarch64.so.1 ]; then
          cp /usr/lib/ld-linux-aarch64.so.1 "$ROOTFS_DIR"/lib/
        fi

        # 13. کپی pacman.conf نهایی
        cp /etc/pacman.conf "$ROOTFS_DIR"/etc/pacman.conf

        # 14. خالی کردن کش pacman
        rm -rf "$ROOTFS_DIR"/var/cache/pacman/pkg/*

        # 15. ایجاد فایل tar.gz خروجی
        tar --hard-dereference --numeric-owner \
          --preserve-permissions -czf /output/zenroalinux-arm64-rootfs.tar.gz \
          -C "$ROOTFS_DIR" .

        ls -lh /output/zenroalinux-arm64-rootfs.tar.gz

  - name: Set release tag
    id: tag
    run: echo "tag_name=arm64-rootfs-$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

  - name: Create GitHub Release in `zenora-android`
    uses: softprops/action-gh-release@v2
    with:
      repository: zenoralinux/zenora-android
      tag_name: ${{ steps.tag.outputs.tag_name }}
      name: Zenora ARM64 RootFS ${{ steps.tag.outputs.tag_name }}
      files: ${{ github.workspace }}/zenroalinux-arm64-rootfs.tar.gz
    env:
      GITHUB_TOKEN: ${{ secrets.ZENORA_ANDROID_PAT }}
